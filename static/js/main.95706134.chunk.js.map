{"version":3,"sources":["component/InfoBox/InfoBox.js","utils/util.js","component/Map/Map.js","component/Table/Table.js","component/LineGraph/LineGraph.js","image/image.png","App.js","reportWebVitals.js","index.js"],"names":["InfoBox","title","cases","total","active","isRed","props","Card","onClick","className","CardContent","Typography","color","gutterBottom","casesTypeColors","hex","multiplier","recovered","deaths","sortData","data","sort","a","b","prettyPrintStat","stat","numeral","format","showDataOnMap","casesType","map","country","Circle","center","countryInfo","lat","long","fillColor","fillOpacity","radius","Math","sqrt","Popup","style","backgroundImage","flag","Map","countries","zoom","TileLayer","url","attribution","Table","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","useState","setData","useEffect","fetch","then","res","json","chartData","lastDataPoint","date","newDataPoint","x","y","push","buildChartData","length","datasets","backgroundColor","borderColor","App","setCountries","tableData","setTableData","setCountryInfo","setInputCountry","setCasesType","mapCountries","setMapCountries","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","response","name","iso2","sortedData","getCountriesData","onCountryChange","e","countryCode","target","src","image","alt","FormControl","Select","variant","onChange","MenuItem","todayCases","todayRecovered","todayDeaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95706134.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from \"@material-ui/core\";\nimport \"./InfoBox.css\";\n\nfunction InfoBox({ title, cases, total, active, isRed, ...props }) {\n    return (\n        <Card\n            onClick={props.onClick}\n            className={`infoBox ${active && \"infoBox--selected\"} ${isRed && \"infoBox--red\"\n                }`}\n        >\n            <CardContent>\n                <Typography color=\"textSecondary\" gutterBottom>\n                    {title}\n                </Typography>\n                <h2 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>\n                    {cases}\n                </h2>\n\n                <Typography className=\"infoBox__total\" color=\"textSecondary\">\n                    {total} Total\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default InfoBox;\n","import numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    multiplier: 300,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    multiplier: 400,\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    multiplier: 2000,\n  },\n};\n\nexport const sortData = (data) => {\n  let sortedData = [...data];\n  return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\n};\n\nexport const prettyPrintStat = (stat) =>\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\nexport const showDataOnMap = (data, casesType) => \n  data.map((country) => (\n    <Circle\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      color={casesTypeColors[casesType].hex}\n      fillColor={casesTypeColors[casesType].hex}\n      fillOpacity={0.4}\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      }\n    >\n      <Popup>\n        <div className=\"info-container\">\n          <div\n            className=\"info-flag\"\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n          ></div>\n          <div className=\"info-name\">{country.country}</div>\n          <div className=\"info-confirmed\">\n            Cases: {numeral(country.cases).format(\"0,0\")}\n          </div>\n          <div className=\"info-recovered\">\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\n          </div>\n          <div className=\"info-deaths\">\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\n          </div>\n        </div>\n      </Popup>\n    </Circle>\n  ));","import { MapContainer as LeafletMap, TileLayer } from \"react-leaflet\";\nimport { showDataOnMap } from \"../../utils/util\";\nimport \"./Map.css\";\n\nfunction Map({ countries, casesType, center, zoom }) {\n\n  return (\n    <div className=\"map\">\n      <LeafletMap center={center} zoom={zoom} >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {showDataOnMap(countries, casesType)}\n      </LeafletMap>\n    </div>\n  );\n}\n\nexport default Map;\n","import './Table.css';\nimport numeral from 'numeral';\n\nfunction Table({ countries }) {\n    return (\n        <div className=\"table\">\n            {countries.map((country) => (\n                <tr>\n                    <td>{country.country}</td>\n                    <td>\n                        <strong>{numeral(country.cases).format(\"0,0\")}</strong>\n                    </td>\n                </tr>\n            ))}\n        </div>\n    )\n}\n\nexport default Table\n","import { Line } from 'react-chartjs-2'\nimport { useEffect, useState } from 'react';\nimport numeral from 'numeral';\n\nconst options = {\n  legend: {                    /*      Default          */\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },                         \n  maintainAspectRatio: false,\n  tooltips: {       // show value when we hover on graph\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },                                /*      Default          */ \n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        }\n      }\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          }\n        }\n      }\n    ]\n  }\n};\n\nconst buildChartData = (data, casesType) => {\n    const chartData = [];\n    let lastDataPoint;\n    for (let date in data[casesType]) {\n        if (lastDataPoint) {\n            let newDataPoint = {\n                x: date,\n                y: data[casesType][date] - lastDataPoint,\n            };\n            chartData.push(newDataPoint);\n        }\n        lastDataPoint = data[casesType][date];\n    }\n    return chartData;\n};\n\nfunction LineGraph({ casesType }) {\n    const [data, setData] = useState({});\n\n    useEffect(() => {\n        fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=128')\n            .then(res => res.json())\n            .then(data => {\n                const chartData = buildChartData(data, casesType);\n                setData(chartData);\n            })\n    }, [casesType]);\n\n    return (\n        <div>\n            {data?.length > 0 && (\n                <Line\n                    data={{\n                        datasets: [\n                        {\n                            backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                            borderColor: \"#CC1034\",\n                            data: data,\n                        }\n                        ],\n                    }}\n                    options={options}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default LineGraph;\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import './App.css';\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport { useEffect, useState } from 'react';\nimport InfoBox from './component/InfoBox/InfoBox';\nimport Map from './component/Map/Map'\nimport Table from './component/Table/Table';\nimport LineGraph from './component/LineGraph/LineGraph';\nimport { prettyPrintStat, sortData } from './utils/util';\nimport numeral from \"numeral\";\nimport \"leaflet/dist/leaflet.css\";\nimport image from './image/image.png'\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [countryInfo, setCountryInfo] = useState({});\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCountries, setMapCountries] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 20, lng: 77 });\n  const [mapZoom, setMapZoom] = useState(3);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    // async -> send a request, wait for it, do something with info\n     \n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n              .then(response => response.json())\n              .then(data => {\n                const countries = data.map(country => ({\n                  name: country.country,\n                  values: country.countryInfo.iso2 // UK, USA, IN\n                }));\n                let sortedData = sortData(data);\n                setTableData(sortedData);\n                setMapCountries(data);\n                setCountries(countries);\n              })\n    }\n\n    getCountriesData();\n  }, [])\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n            .then(res => res.json())\n            .then(data => {\n              setInputCountry(countryCode)\n              setCountryInfo(data);\n              setMapCenter([data.countryInfo?.lat, data.countryInfo?.long]);\n              setMapZoom(4);\n            })\n  }\n  \n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <img src={image} alt=\"COVID-19\"/>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.values}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            isRed\n            active={casesType === \"cases\"}\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            active={casesType === \"recovered\"}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\n          />\n          <InfoBox\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            isRed\n            active={casesType === \"deaths\"}\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\n          />\n        </div>\n        <Map\n          countries={mapCountries}\n          casesType={casesType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            <h3>Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} />\n          </div>\n        </CardContent>  \n      </Card>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}